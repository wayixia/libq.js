<!-- demo components -->
<style>
  .layer-options {
  position: absolute;
  left: 0px;
  top: 0px;
  bottom: 0px;
  right: 0px;
  line-height: 29px;
  font-size: 15px;
  padding: 9px 0;
  overflow:auto;
}


.q-tabs.v-property {
  height: 100%;
}



.q-tabs.v-property .q-tabs-header {
  float: left; 
  width: 129px;
  border-right: 1px solid #EEE;
  height: 100%;
  padding: 0 10px;
}

.q-tabs.v-property .q-tabs-split {
  height:100%;
  width: 1px;
  background-color: #EEE;
}


.q-tabs-body {
  margin-left: 149px;
  border-left: 0px solid #CCCCCC;
  height: 100%;
  background-colors: yellow;
  padding: 0 7px 0 7px;
}

.q-tabs-body .q-panel {
  padding: 0px 0px;
  height: 100%;
}
</style>
<template>
<div class="layer-options">
  <div class="q-tabs v-property">
    <div class="q-tabs-header" qid="q-frame-left">
      <div class="q-table-moveline" qid="q-moveline"></div>
    </div>
    <div class="q-tabs-body" qid="q-frame-right">
      <div qid="panel-2-1" class="q-panel">
        <!--div qid="table-container" style="width:100%; height:100%; ">
        </div-->
    </div>
  </div>
</div>
</template>
<!-- options end -->
<script>

  Q.Window({
    app: app,
    wstyle: 'simpleos',  
    title: 'wayixia',  
    content:  '{#template}', 
    on_create: function() {
      var _this = this;
      var frame_left = this.item( 'q-frame-left' ); 
      var frame_right = this.item( 'q-frame-right' ); 
      
      //init Q.table
      this.table = new Q.Table({
        wnd: this, 
        id: this.item('panel-2-1'),
        wstyle: "q-attr2-border q-attr-no-title q-attr2-noselect",
        columns: [
          { name: 'name', title: '软件名称', align:'left', width: 240, isHTML: true, 
            //renderer : function(record) { return "<div style=\"height:25px; line-height:25px;\"><font>"+ record['name'] + "</font></div>"; },
          },
          { name: 'version', title: '版本', align:'left', width: 140, isHTML: true, 
            //renderer : function(record) { return "<div style=\"height:25px; line-height: 25px;\">" + record['version'] + "</div>";}, 
          },
          { name: 'version2', title: '类别', align:'left', width: 140, isHTML: true, 
            //renderer : function(record) { return "<div style=\"height:25px; line-height: 25px;\">" + record['version'] + "</div>";}, 
          },
        ],  
        store: new Q.Store( {
          data: [
            { name: 'NGINX', version: '1.1.0',version2: '1.1.0'},
            { name: 'MYSQL', version: '5.1.0',version2: '3.1.0'},
            { name: 'NGINX', version: '1.1.0',version2: '1.1.0'},
            { name: 'NGINX', version: '1.1.0',version2: '1.1.0'},
            { name: 'NGINX', version: '1.1.0',version2: '1.1.0'},
            { name: 'NGINX', version: '1.1.0',version2: '1.1.0'},
            { name: 'MYSQL', version: '5.1.0',version2: '3.1.0'},
            { name: 'MYSQL', version: '5.1.0',version2: '3.1.0'},
            { name: 'MYSQL', version: '5.1.0',version2: '3.1.0'},
            { name: 'MYSQL', version: '5.1.0',version2: '3.1.0'},
          ]
        } ),
        //grid_render:app_item_render,
        item_onclick : function(item, evt ) {
          var data = this.getRecord(item);
          evt.cancelBubble=true;
          var e = Q.isNS6() ? evt.target : evt.srcElement; // 获取鼠标悬停所在的对象句柄
          if( !e ) {
            return; 
          }
        },
        item_ondblclick: function( item ) {
          alert(item);
        }
      });

      this.dirtree = new Q.Tree( {
        id: frame_left,
		    name : "站点根目录",
		    open : true,
	    } );

	    this.dirtree.setItemData(0, '/');

	    //this.dirtree.setItemIcon(0, 'treeIconFolder');
	    this.dirtree.itemClick = function(nItem) {
		    //var path = this.getItemData(nItem);
		    //OnUpdateJtable(path, nItem);
        Q.printf("item click " + nItem);
	    }
      
      var rootItem = this.dirtree.getRoot();
      var child1 = this.dirtree.createNode(rootItem, "111");
      var child11 = this.dirtree.createNode(child1, "111-1");
      var child12 = this.dirtree.createNode(child1, "111-2");
      var child13 = this.dirtree.createNode(child1, "111-312778278318723");
      var child2 = this.dirtree.createNode(rootItem, "222");
      var child21 = this.dirtree.createNode(child2, "22200120301203");
      var child22 = this.dirtree.createNode(child2, "222");
      var child3 = this.dirtree.createNode(rootItem, "333");
      var child4 = this.dirtree.createNode(rootItem, "444");


      // init layout
      this.layout = new Q.TableColumn( frame_left, {
        moveline: this.item( 'q-moveline' ), 
        onStart: function(evt, handler) { 
          //_this._column_MouseDown(evt, handler);
        }, 
        onStop: function(evt, handler) { 
          //_this._column_MouseUp(evt, handler);
          console.log( handler._width );
          frame_left.style.width = handler._width + 'px'; 
          frame_right.style.marginLeft = ( handler._width + 20 ) + 'px';
          _this.table.autosize();
        }
      });


    },

    on_close: function() {
      delete app.maindlg; app.maindlg=0; app.__exit__()
      return true;
    } 
  });
</script>